#!/bin/bash
# Generate ssh keys and configs for docker node containers, this avoid keeping
# them in the git repo, which security scanners tend not to appreciate!

set -o errexit
set -o nounset

THIS_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
KNOWN_HOSTS=ssh_known_hosts
AUTHORIZED_KEYS=authorized_keys
SSH_CONFIG=ssh_config

function node-ip() {
	local node="${1}"
	local config="${2}"

	local svc_regex='^ +'"${node}"'.example.com:$'
	local ip_regex='^ +ipv4_address:'
	local in_svc='false'
	while IFS='' read -r line; do
		if [[ "${line}" =~ $svc_regex ]]; then
			in_svc='true'
		fi
		if [[ "${in_svc}" == 'true' ]] && [[ "${line}" =~ $ip_regex ]]; then
			read -r _ ip <<<"${line}"
			printf '%s\n' "${ip}"
			break
		fi
	done <"${config}"
}

function gen-node-keys() {
	local node="${1}"
	mkdir -p "${node}"/{root,host}
	pushd "${node}" >/dev/null
	if ! [[ -f 'host/ssh_host_ecdsa_key' ]]; then
		if ! ssh-keygen -q -t ecdsa -N '' -f host/ssh_host_ecdsa_key -C "${node}" </dev/null; then
			echo "Could not generate host key for ${node}">&2
			return 1
		fi
	fi
	if ! node_ip=$(node-ip "${node}" ../../../docker-compose.yml); then
		echo "Could not determine IP address for ${node}">&2
		return 1
	fi
	printf '%s %s\n' "${node_ip}" "$(cat host/ssh_host_ecdsa_key.pub)" >>../"${KNOWN_HOSTS}"
	if ! [[ -f 'root/id_ecdsa' ]]; then
		if ! ssh-keygen -q -t ecdsa -N '' -f root/id_ecdsa -C 'root@'"${node}" </dev/null; then
			echo "Could not generate root user key for ${node}">&2
			return 1
		fi
	fi
	cat root/id_ecdsa.pub >>../authorized_keys
	cat <<-EOF >>../${SSH_CONFIG}
		Host ${node}
		  User root
		  Hostname ${node_ip}
		  IdentitiesOnly true
		  IdentityFile $(readlink -f root/id_ecdsa)
		  UserKnownHostsFile $(readlink -f ../"${KNOWN_HOSTS}")
	EOF
	popd >/dev/null
}

function main() {
	local -a nodes=("${@}")
	local base_dir
	base_dir="${THIS_DIR}/ssh_configs"

	mkdir -p "${base_dir}"
	pushd "${base_dir}" >/dev/null
	rm -f "${KNOWN_HOSTS}"
	rm -f "${AUTHORIZED_KEYS}"
	rm -f "${SSH_CONFIG}"
	for node in "${nodes[@]}"; do
		if ! gen-node-keys "${node}"; then
			printf 'Error generating keys for %s\n' "${node}"
			exit 1
		fi
	done
	ssh-keygen -Hf "${KNOWN_HOSTS}"
	printf '\nDone. You may run make ssh-config to manually include the generated Host entries to your ssh config..\n'
	popd >/dev/null
}

main "${@}"
