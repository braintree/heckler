repo: "muppetshow"
repo_owner: "braintree"
repo_branch: "main"
github_domain: "github.com"
github_app_slug: "heckler-dev"
github_app_id: 7
github_app_email: "hathaway@paypal.com"
github_app_install_id: 14
auto_tag_cron_schedule: "* * * * *"
apply_cron_schedule: "* * * * *"
auto_close_issues: true
# This is the number of nodes that can be missing when creating a noop for an
# environment
max_node_thresholds:
  errored: 0
  locked_by_another: 0
env_prefix: ""
manual_mode: false
lock_message: |
  Heckler is running Puppet, if you need to steal the node from Heckler,
  override this lock with your own lock and wait for Heckler's current Puppet
  process to complete. Heckler will then respect your lock. Use
  IGNORE_OWN_LOCK=1 to run future cap tasks. For more information see,
  https://example.com
git_server_max_clients: 1
apply_set_order:
  - canaries
  - all
ignored_resources:
  - purpose: 'Statler has great wit'
    rationale: 'Keep it quiet!'
    resources:
      - type: 'File'
        title: '/data/puppet_apply/statler/wit'
change_management_config:
  snow_plugin_path1: '/etc/hecklerd/gsnow_plugin.so'
  snow_cli_path: '/usr/bin/hecklerd_snow_cli'
  is_mandatory: false
  change_request_config:
    env: 'snowEnv'
    template: "snow_template_name"
    assignedTo: "tome"
    assignedGroup: "tous"
    brand: "our"
  snow_config:
    url: 'https://snow.com/gsnow'
    token: 'snowtoken'
node_sets:
  all:
    cmd:
      - bash
      - '-c'
      - printf "fozzie.example.com statler.example.com waldorf.example.com" | jq --raw-input --slurp 'split(" ")'
    # blacklist:
    #   - '^fozzie.*$'
  canaries:
    cmd:
      - bash
      - '-c'
      - printf "fozzie.example.com statler.example.com waldorf.example.com" | jq --raw-input --slurp 'split(" ")|[ .[] |select(test("^fozzie"))]'
